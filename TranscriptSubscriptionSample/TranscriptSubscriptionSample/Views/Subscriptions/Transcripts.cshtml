@model TranscriptSubscriptionSample.Models.SubscriptionDetailsViewModel

@{
    ViewData["Title"] = "Transcripts";
}

<h2 class="headerText">Transcripts for Subscription</h2>

<div class="mb-3">
    <h4>Subscription Details</h4>
    <dl class="row">
        <dt class="col-sm-2">ID</dt>
        <dd class="col-sm-10">@Model.Id</dd>
        <dt class="col-sm-2">Meeting URL</dt>
        <dd class="col-sm-10">@Model.MeetingUrl</dd>
        <dt class="col-sm-2">Status</dt>
        <dd class="col-sm-10">
            <span class="badge @(Model.Status == SubscriptionStatus.Active ? "bg-success" : Model.Status == SubscriptionStatus.Error ? "bg-danger" : "bg-secondary")">
                @Model.Status
            </span>
        </dd>
    </dl>
</div>

<div class="card">
    <div class="card-header">
        <h5>Live Transcripts</h5>
    </div>
    <div class="card-body" style="max-height: 500px; overflow-y: auto;" id="transcript-container">
        @foreach (var transcript in Model.RecentTranscripts)
        {
            <div class="transcript-entry mb-2 p-2 border-bottom">
                <small class="text-muted">@transcript.AudioCaptureTime.ToString("HH:mm:ss")</small>
                <strong>@transcript.Speaker.User.DisplayName:</strong>
                <span>@transcript.Text</span>
            </div>
        }
    </div>
</div>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    <script>
        // Auto-refresh transcripts every 3 seconds
        setInterval(function() {
            location.reload();
        }, 2000);

        // Auto-scroll to bottom
        var container = document.getElementById('transcript-container');
        container.scrollTop = container.scrollHeight;
    </script>
}